/**
 * Uitlizando biblioteca fastify
 * Podemos realizar metodos http
 * GET/ POST/ PUT/ DELETE
 * exemplo
 * http://localhost:3333/hello
 *
 * instalar tsx -D para autmatizar a buil de ts pra js
 * executar com npx tsx + arquivo.ts, utilizar somente em desenvolvimento
 *
 * Configurando eslint
 * npm i eslint @rocketseat/eslint-config -D / utilizado padrão da rocketseat, porem é facultativo
 * chat gpt salvou, deve add "rules": {"prettier/prettier": ["error", { "endOfLine": "auto" }]} no .eslintrc
 *
 * Banco de dados
 * kenx.js --> Para contrurir quarys
 * npm install knex sqlite3
 * criar arquivo de configuração para conexão com o banco de dados
 * Criar migrations --> Vercionamento do banco para que seja sempre atualizado para todos, semelhante ao git.
 * Adicionado ao script "knex": "node --no-warnings --loader tsx ./node_modules/knex/bin/cli.js",
 * Criar as queries na migrations
 * Rodar comando --> npm run knex -- migrate:latest
 * Uma migration em produção para todos da equipe não pode mais ser alterada, porem caso ainda não esteja ido a produção podemos fazer um rollback e alterar.
 * Rodar comando --> npm run knex -- migrate:rollback
 */
